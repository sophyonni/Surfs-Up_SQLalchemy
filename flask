import numpy as np

import sqlalchemy
from sqlalchemy.ext.automap import automap_base
from sqlalchemy.orm import Session
from sqlalchemy import create_engine, func

from flask import Flask, jsonify



#################################################
# Database Setup
#################################################
engine = create_engine("sqlite:///Resources/hawaii.sqlite")

# reflect an existing database into a new model
Base = automap_base()
# reflect the tables
Base.prepare(engine, reflect=True)

# Save reference to the table
Measurment = Base.classes.measurment 
Station = Base.classes.station

# Create  session "link"  to  DB
session = Session(engine)

#################################################
# Flask Setup
#################################################
app = Flask(__name__)
#################################################
# Flask Routes
#################################################
@app.route("/")
def welcome():
    """List all available api routes."""
    return (
        f"Available Routes:<br/>"
        f"/api/v1.0/percipitation<br/>"
        f"/api/v1.0/stations<br/>"
        f"/api/v1.0/tobs"
    )


@app.route("/api/v1.0/percipitation")
def percipitation():
    """Return all percipitation"""
    # Query all passengers
    prcp_results = session.query(Measurment.prcp).all()

    # Convert list of tuples into normal list
    all_percipitation = list(np.ravel(prcp_results))

    return jsonify(all_percipitation)


@app.route("/api/v1.0/stations")
def stations():
    """Return a list of stations"""
    # Query all stations
    station_results = session.query(Station.station).all()

    # Convert list of tuples into normal list
    all_stations = list(np.ravel(station_results))

    return jsonify(all_stations)


@app.route("/api/v1.0/tobs")
def tobs():
    """Return a list of tobs"""
    # Query all tobs
    all_tobs = session.query(Measurment.tobs)

    # Convert list of tuples into normal list
    all_tobs = list(np.ravel(all_tobs))

    return jsonify(all_tobs)


if __name__ == '__main__':
    app.run(debug=True) 